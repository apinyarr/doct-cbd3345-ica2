---
name: "ICA2 - Comprehensive Project - Group C"
on:
  push: 
    branches:
      - 'containerization'
    tags:
      - 'release-*'

jobs:
  build:
    name: Build Destribution Package 📦
    runs-on: windows-uat-1

    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v4

    - name: Print the Workflow Job Description
      uses: ./.github/actions/job-description-print-wins-action
      with:
        description-msg: 'Build Destribution Package'

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user

    - name: Build a Binary wheel and a source tarball
      run: python3 -m build

    - name: Store the Distribution Packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    if: startsWith(github.ref, 'refs/head/release-*')  # only publish to PyPI on release
    needs:
    # - publish-to-pypi
    - build
    runs-on: linux-uat-1

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install the gh cli
      uses: ksivamuthu/actions-setup-gh-cli@v2
      with:
        version: 2.24.3

    - name: Print the Workflow Job Description
      uses: ./.github/actions/job-description-print-action
      with:
        description-msg: 'Release the Package to GitHub'

    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v1.2.3
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl

    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}-${{ github.run_number }}'
        --repo '${{ github.repository }}'
        --notes ""

    - name: Upload Artifact Signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ github.ref_name }}-${{ github.run_number }}' dist/**
        --repo '${{ github.repository }}'

  run-with-service-container:
    name: Run application with a service container (MongoDB)
    needs: 
      - build
    runs-on: linux-uat-1

    services:
      mongodb:
        image: mongo:6.0.4-jammy
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok' --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name mongodb
        ports:
          - 27017:27017
    
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Print the Workflow Job Description
        uses: ./.github/actions/job-description-print-action
        with:
          description-msg: 'Run application with a service container (MongoDB)'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.x'

      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

      - name: Install Packages from Artifact
        run: |
          pip3 install dist/*.whl  # Replace with your package file name
          pip3 freeze

      - name: Run Unit Test
        run: pytest test_app.py --doctest-modules --junitxml=junit/unit-test-results.xml

      - name: Upload Unit Test Artifact
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-result-${{ github.run_number }}
          path: junit/unit-test-results.xml

      - name: Run Coverage Test
        run: pytest test_app.py --cov=./ --cov-report=xml

      - name: Upload Coverage Test Artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-test-result-${{ github.run_number }}
          path: coverage.xml

      - name: Run Application
        run: python3 app.py &

      - name: Test Application - /plot
        run: "curl --location 'http://127.0.0.1:8081/plot' --header 'Content-Type: application/json' --data '{ \"xmin\": 50,\"xmax\": 100,\"ymin\": 50,\"ymax\": 100 }'"

      - name: Verify Json Data in MongoDB (Service Container)
        run: "docker exec mongodb mongosh --eval 'db.wordscollection.find()' dictionary"

  build-docker-image:
    name: Build Docker Image and Share as an Artifact
    needs: 
      - run-with-service-container
    runs-on: linux-uat-1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Print the Workflow Job Description
        uses: ./.github/actions/job-description-print-action
        with:
          description-msg: 'Build Docker Image and Share as an Artifact'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: apinyarr/plotter:base
          outputs: type=docker,dest=/tmp/plotter.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: plotter
          path: /tmp/plotter.tar

  run-continer-app-with-service-container:
    name: Run Application Container and Integration Test with MongoDB Service Container
    runs-on: linux-uat-1
    needs: build-docker-image

    services:
      mongodb:
        image: mongo:6.0.4-jammy
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok' --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name mongodb
        ports:
          - 27017:27017

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Print the Workflow Job Description
        uses: ./.github/actions/job-description-print-action
        with:
          description-msg: 'Run Application Container and Integration Test with MongoDB Service Container'

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: plotter
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/plotter.tar
          docker image ls -a  

      - name: Run Application Container
        run: |
          docker run --name plotter -d -p 8081:8081 apinyarr/plotter:base
          docker ps

      - name: Sleep for 20 seconds
        run: sleep 20s
        shell: bash
        
      - name: Test Application - /plot
        run: "curl --location 'http://127.0.0.1:8081/plot' --header 'Content-Type: application/json' --data '{ \"xmin\": 150,\"xmax\": 200,\"ymin\": 150,\"ymax\": 200 }'"

      - name: Verify Json Data in MongoDB (Service Container)
        run: >-
          "docker exec mongodb mongosh --eval 'db.wordscollection.find({ \"xmin\": 150,\"xmax\": 200,\"ymin\": 150,\"ymax\": 200 })' dictionary 
          | tee integration_test.txt"

      - name: Upload Integration Test Artifact
        uses: actions/upload-artifact@v3
        with:
          name: integration-test-result-${{ github.run_number }}
          path: integration_test.txt

      - name: Stop Application Container
        run: docker rm -f plotter